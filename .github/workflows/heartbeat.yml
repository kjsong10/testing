name: Heartbeat UI

on:
  schedule:
    - cron: "0 * * * *" # Runs every hour
  workflow_dispatch: # Allows manual trigger

jobs:
  monitor:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Install Node.js (required for Lighthouse)
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Step 3: Install Lighthouse CI
      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli@0.13.x

      # Step 4: Run Lighthouse for GitHub Pages
      - name: Run Lighthouse
        run: |
          lhci autorun \
            --collect.url=https://kjsong10.github.io/testing/
            --upload.target=filesystem \
            --upload.outputDir=./lighthouse-report

      # Step 5: Upload the results to the repository
      - name: Upload Lighthouse Report
        uses: actions/upload-artifact@v3
        with:
          name: lighthouse-report
          path: ./lighthouse-report

      # Step 6: Deploy the report to GitHub Pages
      - name: Deploy to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./lighthouse-report

  metrics:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Use a monitoring API (e.g., UptimeRobot)
      - name: Fetch Uptime Metrics
        run: |
          curl -X GET "https://api.uptimerobot.com/v2/getMonitors" \
            -H "Content-Type: application/json" \
            -d '{"api_key": "${{ secrets.UPTIME_ROBOT_API_KEY }}"}' > uptime-metrics.json

      # Step 3: Parse and log metrics
      - name: Log metrics
        run: |
          cat uptime-metrics.json

      # Step 4: Upload metrics to GitHub Pages
      - name: Deploy Metrics to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./

  notify:
    runs-on: ubuntu-latest
    needs: [monitor, metrics]

    steps:
      - name: Notify on Failure
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.example.com
          server_port: 587
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: "Heartbeat UI Alert"
          body: "One or more checks failed. Please review the logs."
          to: "admin@example.com"
          from: "github-actions@example.com"
